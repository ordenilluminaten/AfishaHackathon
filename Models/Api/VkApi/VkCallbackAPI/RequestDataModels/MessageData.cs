namespace Models.Api.VkApi.VkCallbackAPI.RequestDataModels {
    public class MessageData : CallBackApiData {

        public int user_id { get; set; }// идентификатор пользователя, которому отправляется сообщение.
        /// <summary>
        /// уникальный(в привязке к API_ID и ID отправителя) идентификатор, предназначенный для предотвращения 
        /// повторной отправки одинакового сообщения.Сохраняется вместе с сообщением и доступен в истории сообщений.
        /// Заданный random_id используется для проверки уникальности в течение одного часа.
        ///   целое число, доступен начиная с версии 5.45
        /// </summary>
        public long random_id { get; set; }
        /// <summary>
        /// идентификатор назначения.
        ///Для пользователя:
        /// id пользователя.
        ///  Для групповой беседы:
        /// 2000000000 + id беседы.
        ///    Для сообщества:
        ///-id сообщества.
        /// </summary>
        public int peer_id { get; set; }
        /// <summary>
        /// domain короткий адрес пользователя (например, illarionov).
        /// </summary>
        public string domain { get; set; }
        /// <summary>
        ///  идентификатор беседы, к которой будет относиться сообщение.
        ///  положительное число, максимальное значение 100000000
        /// </summary>
        public string chat_id { get; set; }
        /// <summary>
        /// идентификаторы получателей сообщения(при необходимости отправить сообщение сразу нескольким пользователям). Доступно только для ключа доступа сообщества.Максимальное количество идентификаторов: 100.
        /// список целых чисел, разделенных запятыми
        /// </summary>
        public string user_ids { get; set; }
        /// <summary>
        /// message текст личного сообщения.Обязательный параметр, если не задан параметр attachment. 
        /// </summary>
        public string message { get; set; }
        /// <summary>
        ///      lat географическая широта(от -90 до 90).
        /// </summary>
        public double lat { get; set; }
        /// <summary>
        /// long географическая долгота(от -180 до 180).
        /// </summary>
        public double @long { get; set; }
        /// <summary>
        /// медиавложения к личному сообщению, перечисленные через запятую. Каждое прикрепление представлено в формате:
        /// [type][owner_id]_[media_id]
        /// Параметр является обязательным, если не задан параметр message.
        ///  В случае, если прикрепляется объект, принадлежащий другому пользователю следует добавлять к вложению его access_key в формате<type><owner_id>_<media_id> _<access_key>, Например:
        ///  video85635407_165186811_69dff3de4372ae9b6e
        /// </summary>
        public string attachment { get; set; }
        /// <summary>
        ///  forward_messages идентификаторы пересылаемых сообщений, перечисленные через запятую.Перечисленные сообщения отправителя будут отображаться в теле письма у получателя.Не более 200 значений.
        /// </summary>
        public string forward_messages { get; set; }
        /// <summary>
        /// идентификатор стикера
        /// </summary>
        public int sticker_id { get; set; }
    }
}